{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "_artifactsLocation": "url of storage path created in deploy ps"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "_artifactsLocationSasToken": "sas url created in deploy ps"
      }
    },
    "oms-rg": {
      "type": "string"
    },
    "workspaceName": {
      "type": "string"
    },
    "scriptFile": {
      "type": "string"
    },
    "lbOrNolb": {
      "type": "string",
      "defaultValue": "lb",
      "allowedValues": [
        "lb",
        "nolb"
      ],
      "metadata": {
        "description": "Deploy a load balancer or no load balancer"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "minLength": 1
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": ""
      },
      "minLength": 3,
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)"
      },
      "minValue": 1,
      "maxValue": 100
    },
    "dataDiskCount": {
      "type": "int",
      "metadata": {
        "description": "Number of data disk"
      },
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 64
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Administrator username on all VMs"
      }
    },
    "adminPassword": {
      "metadata": {
        "description": "Administrator password on all VMs"
      },
      "type": "securestring"
    },
    "subnetname": {
      "type": "string",
      "defaultValue": ""
    },
    "virtualnetworkName": {
      "type": "string",
      "defaultValue": ""
    },
    "virtualnetworkNameRGName": {
      "type": "string",
      "defaultValue": ""
    },
    "lbport": {
      "type": "int",
      "metadata": {
        "description": "port requiring load balancing (if lb required)"
      },
      "defaultValue": 443
    },
    "diskType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Standard_LRS or Premium_LRS"
      },
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ]
    }
  },
  "variables": {
    "namingInfix": "[toLower(concat(parameters('vmssName')))]",
    "longNamingInfix": "[toLower(parameters('vmssName'))]",
    "loadBalancerName": "[concat(variables('namingInfix'), 'lb')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
    "lbport": "[parameters('lbport')]",
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "osType_rhel": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "[parameters('ubuntuOSVersion')]",
      "version": "latest"
    },
    "osType_win": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "[parameters('ubuntuOSVersion')]",
      "version": "latest"
    },
    "imageReference": "[variables('osType')]",
    "computeApiVersion": "2017-03-30",
    "networkApiVersion": "2017-04-01",
    "diskType": "[parameters('diskType')]"
  },
  "resources": [
    {
      "condition": "[equals(parameters('lbOrNolb'),'lb')]",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "dependsOn": [],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "subnet": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', parameters('virtualnetworkNameRGName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualnetworkName'), '/subnets/', parameters('subnetName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/', variables('bePoolName'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[variables('lbport')]",
              "backendPort": "[variables('lbport')]",
              "idleTimeoutInMinutes": 15
            },
            "Name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": "[variables('lbport')]",
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('lbOrNolb'),'lb')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[concat(variables('namingInfix'),'lb')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "[variables('diskType')]"
              }
            },
            "imageReference": "[variables('imageReference')]",
            "copy": [
              {
                "name": "dataDisks",
                "count": "[parameters('dataDiskCount')]",
                "input": {
                  "diskSizeGB": "1023",
                  "lun": "[copyIndex('dataDisks')]",
                  "createOption": "Empty",
                  "managedDisk": { "storageAccountType": "[variables('diskType')]" }
                }
              }
            ]
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', parameters('virtualnetworkNameRGName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualnetworkName'), '/subnets/', parameters('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "type": "extensions",
                "name": "executeScript",
                "location": "[resourceGroup().location]",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[concat(parameters('_artifactsLocation'), '/', parameters('scriptFile'), parameters('_artifactsLocationSasToken'))]"
                    ]
                  },
                  "protectedSettings": {
                    "commandToExecute": "[concat('./', parameters('scriptFile'))]"
                  }

                }
              }
            ]
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('lbOrNolb'),'nolb')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[concat(variables('namingInfix'),'nolb')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
      ],
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "[variables('diskType')]"
              }
            },
            "imageReference": "[variables('imageReference')]",
            "copy": [
              {
                "name": "dataDisks",
                "count": "[parameters('dataDiskCount')]",
                "input": {
                  "diskSizeGB": "1023",
                  "lun": "[copyIndex('dataDisks')]",
                  "createOption": "Empty",
                  "managedDisk": { "storageAccountType": "[variables('diskType')]" }
                }
              }
            ]
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', parameters('virtualnetworkNameRGName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualnetworkName'), '/subnets/', parameters('subnetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "type": "extensions",
                "name": "executeScript",
                "location": "[resourceGroup().location]",               
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[concat(parameters('_artifactsLocation'), '/', parameters('scriptFile'), parameters('_artifactsLocationSasToken'))]"
                    ]
                  },
                  "protectedSettings": {
                    "commandToExecute": "[concat('./', parameters('scriptFile'))]"
                  }

                }
              }
            ]
          }
        }
      }
      
      
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings",
      "name": "[concat(variables('namingInfix'), parameters('lbOrNoLb'), '/', 'Microsoft.Insights/service')]",
      "apiVersion": "2015-07-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'), parameters('lbOrNoLb'))]"
      ],
      "properties": {
        "workspaceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('oms-rg'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
        "metrics": [
          {
            "timeGrain": "PT1M",
            "enabled": true,
            "retentionPolicy": {
              "enabled": false,
              "days": 0
            }

          }
        ]
      }
    }

  ]
  }